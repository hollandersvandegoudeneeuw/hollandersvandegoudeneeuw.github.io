{"version":3,"sources":["app/app.js","app/js/controllers/app.ctrl.js","app/js/controllers/favorites.ctrl.js","app/js/controllers/group.ctrl.js","app/js/controllers/hashtag.ctrl.js","app/js/controllers/login.ctrl.js","app/js/controllers/pages.ctrl.js","app/js/controllers/person.ctrl.js","app/js/controllers/profile.ctrl.js","app/js/controllers/timeline.ctrl.js","app/js/directives/ui.js","app/js/services/api.service.js","app/js/services/auth.service.js","app/js/services/i18n.service.js","app/js/services/story.service.js"],"names":[],"mappingszBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/js/app.js","sourcesContent":["$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.controllers', []);\n  angular.module('app.services', []);\n  angular.module('app.directives', []);\n  angular.module('app', ['ngSanitize', 'ngResource', 'ngAnimate', 'templates', 'ui.router', 'ui.bootstrap', 'app.controllers', 'app.directives', 'app.services']).constant('APIConfig', window.location.hostname == 'localhost' ? {'backend': 'http://goldenage.miraclethings.nl/api/'} : {'backend': 'http://goldenage.miraclethings.nl/api/'}).run(function($cacheFactory, $http) {\n    $http.defaults.cache = $cacheFactory('default');\n  }).value('Constants', {YOU: 351}).config(function($stateProvider, $urlRouterProvider) {\n    var resolveLoggedIn = {login: ['AuthService', function(AuthService) {\n        return AuthService.isAuthorized();\n      }]};\n    var resolveStory = {\n      story: ['APIService', 'AuthService', '$stateParams', function(APIService, AuthService, $stateParams) {\n        return AuthService.isAuthorized().then(function() {\n          return APIService.get('goldenage/storydata', {id: $stateParams.storyId});\n        });\n      }],\n      login: resolveLoggedIn.login\n    };\n    $stateProvider.state('start', {\n      url: \"/start\",\n      views: {master: {controller: 'StartCtrl'}}\n    }).state('login', {\n      url: \"/login\",\n      views: {\"master\": {\n          templateUrl: \"app/templates/login.html\",\n          controller: 'LoginCtrl'\n        }}\n    }).state('help', {\n      url: \"/help\",\n      resolve: resolveLoggedIn,\n      \"views\": {\n        \"master\": {templateUrl: \"app/templates/story.html\"},\n        \"detail@help\": {\n          templateUrl: \"app/templates/page.html\",\n          controller: 'PageCtrl'\n        }\n      }\n    }).state('credits', {\n      url: \"/credits\",\n      resolve: resolveLoggedIn,\n      \"views\": {\n        \"master\": {templateUrl: \"app/templates/story.html\"},\n        \"detail@credits\": {\n          templateUrl: \"app/templates/page.html\",\n          controller: 'PageCtrl'\n        }\n      }\n    }).state('choose', {\n      url: \"/choose\",\n      resolve: resolveLoggedIn,\n      views: {\n        \"master\": {templateUrl: \"app/templates/story.html\"},\n        \"detail@choose\": {\n          templateUrl: \"app/templates/choose.html\",\n          controller: 'ChooseCtrl'\n        }\n      }\n    }).state('story', {\n      url: \"/:storyId\",\n      resolve: resolveStory,\n      views: {\"master\": {\n          templateUrl: \"app/templates/story.html\",\n          controller: function($scope, story, $state) {\n            $scope.story = story;\n          }\n        }}\n    }).state('story.timeline', {\n      url: \"/timeline\",\n      views: {\"detail@story\": {\n          templateUrl: \"app/templates/timeline.html\",\n          controller: 'TimelineCtrl'\n        }}\n    }).state('story.favorites', {\n      url: \"/favorites\",\n      views: {\"detail@story\": {\n          templateUrl: \"app/templates/favorites.html\",\n          controller: 'FavoritesCtrl'\n        }}\n    }).state('story.profile', {\n      url: \"/profile\",\n      views: {\"detail@story\": {\n          templateUrl: \"app/templates/profile.html\",\n          controller: 'ProfileCtrl'\n        }}\n    }).state('story.person', {\n      url: \"/person/:personId\",\n      views: {\"detail@story\": {\n          templateUrl: \"app/templates/person.html\",\n          controller: 'PersonCtrl'\n        }}\n    }).state('story.group', {\n      url: \"/group/:groupId\",\n      views: {\"detail@story\": {\n          templateUrl: \"app/templates/group.html\",\n          controller: 'GroupCtrl'\n        }}\n    }).state('story.hashtag', {\n      url: \"/hashtag/:hashtagId\",\n      views: {\"detail@story\": {\n          templateUrl: \"app/templates/hashtag.html\",\n          controller: 'HashtagCtrl'\n        }}\n    });\n    ;\n    $urlRouterProvider.otherwise(\"/start\");\n  });\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.controllers').controller('AppCtrl', function AppCtrl($scope, $modal, $rootScope, $state, APIService, AuthState, AuthService) {\n    $scope.$state = $state;\n    $scope.state = AuthState;\n    $rootScope.lang = navigator.language.substr(0, 2) == 'nl' ? 'nl' : 'en';\n    $scope.blurred = true;\n    APIService.get('goldenage/stories').then(function(r) {\n      AuthState.stories = r;\n      return true;\n    });\n    $scope.logout = function() {\n      AuthService.logout();\n    };\n  }).controller('StartCtrl', function StartCtrl($scope, $state, AuthService, AuthState) {\n    AuthService.isAuthorized().then(function(auth) {\n      $state.go('choose');\n    }, function() {\n      $state.go('login');\n    });\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.controllers').controller('FavoritesCtrl', function TimelineCtrl($scope, $modal, AuthState, story, StoryContainer) {\n    var profile = AuthState.profile;\n    var container = new StoryContainer(story);\n    $scope.cards = container.filterCards(profile.likes);\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.controllers').controller('GroupCtrl', function ProfileCtrl($scope, $stateParams, $window, story) {\n    $scope.group = story.groups[$stateParams.groupId];\n    if (!$scope.group) {\n      $window.history.back();\n      return;\n    }\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.controllers').controller('HashtagCtrl', function HashtagCtrl($scope, $window, $stateParams, story, StoryContainer) {\n    $scope.hashtag = story.hashtags[$stateParams.hashtagId];\n    if (!$scope.hashtag) {\n      $window.history.back();\n      return;\n    }\n    var container = new StoryContainer(story);\n    $scope.cards = container.filterHashtagCards($stateParams.hashtagId);\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.controllers').controller('LoginCtrl', function StartCtrl($scope, $state, AuthService, AuthState) {\n    $scope.errorMessage = null;\n    $scope.login = function() {\n      if (!$scope.loginForm.$valid)\n        return;\n      AuthService.login($scope.email).then(function(r) {\n        $state.go('start');\n      }, function(e) {\n        console.log(e);\n        $scope.errorMessage = \"This e-mail address is unknown.\";\n      });\n    };\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.controllers').controller('ChooseCtrl', function ChooseCtrl($scope, $state) {\n    console.log('choose');\n    $scope.navCaption = 'choose_header';\n  }).controller('PageCtrl', function PageCtrl($scope, $rootScope, $state, $stateParams, $sce) {\n    console.log($stateParams, $state);\n    $scope.stateName = $state.$current.name;\n    $scope.navCaption = $scope.stateName + '_header';\n    $scope.url = \"http://goldenage.miraclethings.nl/app/\" + $scope.stateName;\n    $scope.url = $sce.trustAsResourceUrl($scope.url);\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.controllers').controller('PersonCtrl', function ProfileCtrl($scope, $window, $stateParams, StoryContainer, story) {\n    $scope.person = story.persons[$stateParams.personId];\n    if (!$scope.person) {\n      $window.history.back();\n      return;\n    }\n    var container = new StoryContainer(story);\n    $scope.cards = container.filterPersonCards($scope.person.id);\n    $scope.groups = _(story.groups).filter(function(g) {\n      return _.find(g.members, {id: $scope.person.id}) !== undefined;\n    }).each(function(g) {\n      if (g.members.length > 4) {\n        var rest = g.members.splice(4);\n        g.members.push({rest: rest.length});\n      }\n      for (var i = 0; i < g.members.length; i++) {\n        g.members[i].hiddensm = i > 2;\n      }\n      return g;\n    }).value();\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.controllers').controller('ProfileCtrl', function ProfileCtrl($scope, story, $modal, AuthState, AuthService) {\n    $scope.logout = AuthService.logout;\n    $scope.network = _.map(story.network, function(id) {\n      return story.persons[id];\n    });\n    console.log($scope.network);\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.controllers').controller('TimelineCtrl', function TimelineCtrl($scope, $modal, AuthState, story, i18n, StoryContainer) {\n    var container = new StoryContainer(story);\n    $scope.cards = container.filterCards(AuthState.profile.read);\n  }).controller('CardListCtrl', function CardListCtrl($scope, i18n, AuthState, APIService) {\n    function likes(card) {\n      return _.contains(AuthState.profile.likes, card.id);\n    }\n    $scope.toggleLike = function(card) {\n      var deleteLike = likes(card);\n      APIService.post('goldenage/favorite', {\n        card_id: card.id,\n        delete: deleteLike\n      });\n      if (deleteLike) {\n        AuthState.profile.likes = _.difference(AuthState.profile.likes, [card.id]);\n      } else {\n        AuthState.profile.likes.push(card.id);\n      }\n    };\n    $scope.likeImage = function(card) {\n      return likes(card) ? '/img/ic_card_heart_on.png' : '/img/ic_card_heart_off.png';\n    };\n    $scope.likeText = function(card, story) {\n      var names = [];\n      if (likes(card)) {\n        names.push(i18n('like_text_you'));\n      }\n      _.each(card.likes || [], function(id) {\n        names.push(story.persons[id].title);\n      });\n      if (!names.length) {\n        return '';\n      }\n      var s = i18n('like_text_template_plural');\n      if (names.length == 1) {\n        if (likes(card)) {\n          s = i18n('like_text_template_single_1stperson');\n        } else {\n          s = i18n('like_text_template_single');\n        }\n      }\n      var namestr = names.join(\", \");\n      if (names.length > 1) {\n        var pos = namestr.lastIndexOf(', ');\n        namestr = namestr.substring(0, pos) + i18n('like_text_and') + namestr.substring(pos + 1);\n      }\n      return s.replace(/%s/, namestr);\n    };\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.directives').filter('unsafe', function($sce) {\n    return $sce.trustAsHtml;\n  }).directive('scrollContainer', function($window, $timeout) {\n    return {\n      restrict: 'A',\n      scope: {scrollContainer: '@'},\n      link: function(s, el) {\n        el.addClass(\"scroll-area\");\n        el.css('opacity', 0);\n        el.css('height', ($(window).height() - $(el).offsetParent().offset().top) + 'px');\n        if (s.scrollContainer == 'force') {\n          console.log('a');\n          el.css('opacity', 1);\n          return;\n        }\n        function resize() {\n          var h = $(el).height();\n          var newh = $(window).height() - $(el).offsetParent().offset().top;\n          if (newh < h) {\n            $(el).css(\"height\", newh + \"px\");\n          } else {}\n          el.toggleClass(\"scrollbar\", (el[0].scrollHeight > el[0].clientHeight));\n          el.css('opacity', 1);\n        }\n        $timeout(resize, 0);\n        $timeout(resize, 800);\n        $(window).on('resize', _.debounce(resize, 500));\n      }\n    };\n  }).directive('subnavHeader', function($window) {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/templates/ui/subnav_header.html',\n      scope: {title: '@'},\n      link: function(scope) {\n        scope.back = function() {\n          $window.history.back();\n        };\n      }\n    };\n  }).directive('cardImage', function($sce, $compile, $state, i18n, Constants, actorClick) {\n    return {\n      restrict: 'E',\n      scope: {\n        card: '=',\n        story: '=',\n        profile: '=',\n        who: '@'\n      },\n      template: '<img ng-src=\"{{ image }}\" ng-show=\"visible\" class=\"card-profile-image\" ng-click=\"click()\" />',\n      replace: true,\n      link: function(scope, ele) {\n        scope.visible = !!scope.card[scope.who];\n        if (!scope.visible)\n          return;\n        var id = scope.card[scope.who];\n        var rsc = scope.story.persons[id] || scope.story.groups[id];\n        if (id == Constants.YOU) {\n          rsc = scope.profile;\n        }\n        if (rsc) {\n          scope.image = rsc.image;\n        }\n        scope.click = function() {\n          actorClick(id, scope.story);\n        };\n      }\n    };\n  }).factory('actorClick', function($state, Constants) {\n    return function(id, story) {\n      if (id == Constants.YOU) {\n        $state.go('story.profile', {storyId: story.id});\n        return;\n      }\n      if (story.persons[id]) {\n        $state.go('story.person', {\n          storyId: story.id,\n          personId: id\n        });\n        return;\n      }\n      if (story.groups[id]) {\n        $state.go('story.group', {\n          storyId: story.id,\n          groupId: id\n        });\n        return;\n      }\n    };\n  }).directive('cardTitle', function($sce, $compile, $state, i18n, Constants, actorClick) {\n    return {\n      restrict: 'E',\n      scope: {\n        card: '=',\n        story: '=',\n        profile: '='\n      },\n      replace: true,\n      link: function(scope, ele) {\n        var cat = scope.card.category;\n        switch (cat) {\n          case 'checkin':\n            if (scope.card.target > 0) {\n              cat += '_target';\n            }\n            break;\n        }\n        var template = i18n('card_title_' + cat);\n        function link(tpl, id) {\n          var rsc = scope.story.persons[id] || scope.story.groups[id];\n          if (id == Constants.YOU) {\n            rsc = scope.profile;\n          }\n          var a = \"<a href ng-click='click(\" + id + \")'>\" + rsc.title + \"</a>\";\n          return template.replace(tpl, a);\n        }\n        if (scope.card.author) {\n          template = link('[author]', scope.card.author);\n        }\n        if (scope.card.target) {\n          template = link('[target]', scope.card.target);\n        }\n        scope.click = function(id) {\n          return actorClick(id, scope.story);\n        };\n        ele.html(\"<div class='card-title'>\" + template + \"</div>\");\n        $compile(ele.contents())(scope);\n      }\n    };\n  }).directive('cardStatusImage', function() {\n    return {\n      restrict: 'E',\n      scope: {card: '='},\n      template: '<img ng-src=\"{{ image }}\" ng-show=\"image\" class=\"card-status\" />',\n      replace: true,\n      link: function(scope, ele) {\n        scope.image = '/img/ic_card_type_checkin.png';\n        switch (scope.card.category) {\n          case \"checkin\":\n            scope.image = '/img/ic_card_type_checkin.png';\n            break;\n          case \"friend_request\":\n            scope.image = '/img/ic_card_type_friend.png';\n            break;\n          case \"friendship\":\n            scope.image = '/img/ic_card_type_friend.png';\n            break;\n          case \"private_message\":\n            scope.image = '/img/ic_card_type_message.png';\n            break;\n          case \"status_update\":\n            scope.image = '/img/ic_card_type_message.png';\n            break;\n          case \"attend_event\":\n            scope.image = '/img/ic_card_type_event.png';\n            break;\n          case \"tag_picture\":\n            scope.image = '/img/ic_card_type_tag.png';\n            break;\n          case \"join_group\":\n            scope.image = '/img/ic_card_type_friend.png';\n            break;\n        }\n      }\n    };\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.services').factory('APIService', function APIService($q, $http, APIConfig, AuthState) {\n    function checkAuth(email) {\n      if (!email)\n        email = AuthState.getEmail();\n      $http.defaults.headers.common.Authorization = email ? 'E-mail ' + email : null;\n    }\n    return {\n      get: function(path, args, email) {\n        var qs = args ? ('?' + $.param(args)) : '';\n        checkAuth(email);\n        return $http({\n          url: APIConfig.backend + path + qs,\n          method: 'GET',\n          cache: true\n        }).then(function(r) {\n          return r.data;\n        });\n      },\n      post: function(path, args) {\n        return $http.post(APIConfig.backend + path, args).then(function(r) {\n          return r.data;\n        });\n      }\n    };\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.services').value('AuthState', {\n    getEmail: function() {\n      return localStorage.email;\n    },\n    setEmail: function(e) {\n      if (!e) {\n        delete localStorage.email;\n      } else {\n        localStorage.email = e;\n      }\n    },\n    profile: null,\n    stories: null\n  }).factory('AuthService', function AuthService($q, $state, $http, AuthState, APIService) {\n    function authSuccess(r) {\n      AuthState.profile = r;\n      return true;\n    }\n    function isAuthorized() {\n      return APIService.get('goldenage/userinfo', {}, AuthState.getEmail()).then(authSuccess, function(e) {\n        $state.go('login');\n        return $q.reject();\n      });\n    }\n    function login(email) {\n      return APIService.get('goldenage/userinfo', {}, email).then(function(r) {\n        AuthState.setEmail(email);\n        return authSuccess(r);\n      });\n    }\n    function logout() {\n      AuthState.setEmail(null);\n      $http.defaults.cache.removeAll();\n      $state.go('start');\n    }\n    return {\n      isAuthorized: isAuthorized,\n      login: login,\n      logout: logout\n    };\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.services').factory('i18n', function($rootScope) {\n    var messages = {\n      en: {\n        'login_title': 'Welcome to the Golden Age!',\n        'login_text': 'This website is part of the app and educational program #goldenAge. Please first visit the exhibition before using this website. Afterwards, log in with the same e-mail address that you used in the app.',\n        'login_placeholder': 'E-mail address',\n        'login_btn': 'Login',\n        'choose_header': 'Choose a story to start',\n        'choose_text': 'Pick a story from the list on the left.',\n        'help_header': 'Help',\n        'credits_header': 'Credits',\n        'menu_logout': 'Login with different user',\n        like_text_you: \"You\",\n        like_text_and: \" and \",\n        like_text_template_plural: \"%s like this\",\n        like_text_template_single: \"%s likes this\",\n        like_text_template_single_1stperson: \"%s like this\",\n        person_biography: 'Biography',\n        person_details: 'Personal details',\n        heading_network: 'Network',\n        card_title_attend_event: \"[author] created an event\",\n        card_title_attend_event_you: \"You are attending an event\",\n        card_title_checkin: \"[author] checked in\",\n        card_title_checkin_target: \"[author] checked in at [target]\",\n        card_title_friend_request: \"[author] wants to become friends with [target]\",\n        card_title_friend_request_you: \"[author] wants to add you to their network\",\n        card_title_friendship: \"[author] has become friends with [target]\",\n        card_title_friendship_you: \"[author] added you to their network\",\n        card_title_join_group: \"[author] joined the group [target]\",\n        card_title_join_group_you: \"You joined the group [target]\",\n        card_title_private_message: \"[author] wrote a message to [target]\",\n        card_title_private_message_you: \"[author] wrote you a message\",\n        card_title_status_update: \"[author] wrote a status update\",\n        card_title_tag_picture: \"[author] tagged [target] in a picture\",\n        card_title_tag_picture_no_target: \"[author] is tagged in a picture\",\n        card_title_tag_picture_self: \"[author] tagged himself in a picture\",\n        card_title_tag_picture_you: \"[author] tagged you in a picture\"\n      },\n      nl: {\n        'login_title': 'Welkom in de Gouden Eeuw!',\n        'login_text': 'Deze website behoort bij de applicatie en het educatieprogramma #goudenEeuw. Bezoek eerst de tentoonstelling in het kader van dit educatieprogramma voordat je deze website gebruikt. Login met hetzelfde e-mailadres als je hebt gebruikt tijdens je bezoek.',\n        'login_placeholder': 'E-mailadres',\n        'login_btn': 'Login',\n        'choose_header': 'Kies een verhaal',\n        'choose_text': 'Kies een verhaal uit de lijst aan de linkerkant.',\n        'help_header': 'Help',\n        'credits_header': 'Credits',\n        'menu_logout': 'Login met andere gebruiker',\n        like_text_you: \"Jij\",\n        like_text_and: \" en \",\n        like_text_template_plural: \"%s vindt dit leuk\",\n        like_text_template_single: \"%s vinden dit leuk\",\n        like_text_template_single_1stperson: \"%s vindt dit leuk\",\n        person_biography: 'Biografie',\n        person_details: 'Persoonlijke details',\n        heading_network: 'Netwerk',\n        card_title_attend_event: \"[author] heeft een event aangemaakt\",\n        card_title_attend_event_you: \"Je gaat naar een event\",\n        card_title_checkin: \"[author] is ingechecked\",\n        card_title_checkin_target: \"[author] is ingechecked bij [target]\",\n        card_title_friend_request: \"[author] wil vrienden worden met [target]\",\n        card_title_friend_request_you: \"[author] wil met je netwerken\",\n        card_title_friendship: \"[author] is bevriend geworden met [target]\",\n        card_title_friendship_you: \"[author] heeft je toegevoegd aan zijn netwerk\",\n        card_title_join_group: \"[author] is lid geworden van [target]\",\n        card_title_join_group_you: \"Je bent lid geworden van [target]\",\n        card_title_private_message: \"[author] stuurde een bericht naar [target]\",\n        card_title_private_message_you: \"[author] stuurde je een privébericht\",\n        card_title_status_update: \"[author] schreef een statusupdate\",\n        card_title_tag_picture: \"[author] tagde [target] in een schilderij\",\n        card_title_tag_picture_no_target: \"[author] is getagged in een schilderij\",\n        card_title_tag_picture_self: \"[author] tagde zichzelf in een foto\",\n        card_title_tag_picture_you: \"[author] heeft jou in een foto getagd\"\n      }\n    };\n    return function selectMessage(msg) {\n      return messages[$rootScope.lang][msg] || \"?\" + msg + \"?\";\n    };\n  }).filter('i18n', function(i18n) {\n    return i18n;\n  });\n  ;\n  return {};\n});\n\n","$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n  angular.module('app.services').factory('StoryContainer', function() {\n    return function(story) {\n      var self = this;\n      self.findCard = function(id) {\n        for (var i in story.chapters) {\n          for (var j in story.chapters[i].cards) {\n            var c = story.chapters[i].cards[j];\n            if (c.id == id) {\n              return c;\n            }\n          }\n        }\n        return null;\n      };\n      self.filterCards = function(ids) {\n        var list = _.reduce(ids, function(list, id) {\n          var card = self.findCard(id);\n          if (card) {\n            list.push(card);\n          }\n          return list;\n        }, []);\n        list.reverse();\n        return list;\n      };\n      self.filterPersonCards = function(personId) {\n        var list = [];\n        for (var i in story.chapters) {\n          for (var j in story.chapters[i].cards) {\n            var c = story.chapters[i].cards[j];\n            if (c.author == personId || c.target == personId) {\n              list.push(c);\n            }\n          }\n        }\n        return list;\n      };\n      self.filterHashtagCards = function(hashtagId) {\n        var list = [];\n        for (var i in story.chapters) {\n          for (var j in story.chapters[i].cards) {\n            var c = story.chapters[i].cards[j];\n            if (_.find(c.hashtags, {id: parseInt(hashtagId, 10)})) {\n              list.push(c);\n            }\n          }\n        }\n        return list;\n      };\n      return self;\n    };\n  });\n  ;\n  return {};\n});\n\n"]}